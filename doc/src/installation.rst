.. raw:: html

   <!--

   ============================================================================

      DO NOT EDIT THIS FILE! It was generated using Sphinx from:

      Origin:   $URL$
      Revision: $Rev$

   ============================================================================

   -->

.. title:: Installation of GLISTR Software

.. meta::
   :description: How to install GLISTR software, a step-by-step guide.
   :keywords: GLISTR Installation, GLISTR Install, GLISTR Configuration, GLISTR Setup.

   
.. raw:: latex

    \pagebreak

.. role:: red
.. role:: blue
   
   
.. raw:: html

    <br />

============
Installation
============

.. raw:: html

    <br />

    
.. _BuildDependencies:

Build Dependencies
==================

Before building GLISTR, the following software libraries are required te installed.

.. tabularcolumns:: |p{3cm}|m{3cm}|p{9cm}|

+-------------+------------------+-----------------------------------------------------+
| Package     | Version          | Description                                         |
+=============+==================+=====================================================+
| CMake_      | 2.8.4 or higher  | To compile and build GLISTR. Use version 2.8.4 or   |
|             |                  | higher.                                             |
+-------------+------------------+-----------------------------------------------------+
| ITK_        | 3.14 or higher   | For ITK 3.x, ``ITK_USE_REVIEW``                     |
|             |                  | option is required                                  |
|             |                  | to set ``ON``.                                      |
|             |                  | For ITK 4.x, there's no mandatory option.           |
|             |                  | In Windows, build ITK using CMake with the          |
|             |                  | Win64 (x64) solution platform of Visual Studio.     |
+-------------+------------------+-----------------------------------------------------+
| LAPACK_     | 3.2.1 or higher  | Used for solving linear systems in GLISTR.          |
|             |                  | In Windows, build CLAPACK_ using CMake with the     |
|             |                  | Win64 (x64) solution platform of Visual Studio.     |
+-------------+------------------+-----------------------------------------------------+

.. | UMFPACK_    | 5.6.2            | Used for solving linear systems in GLISTR.          |

.. | SuperLU_MT_ | 2.2              | Used for solving linear systems in GLISTR.          |
.. +-------------+------------------+-----------------------------------------------------+
.. | MetaIO_     |                  | Used for providing ITK MetaImage_ input / output.   |
.. +-------------+------------------+-----------------------------------------------------+
.. | NiftiClib_  | 2.0.0            | Usef for providing NIfTI-1_ input / output.         |
.. +-------------+------------------+-----------------------------------------------------+
.. | zlib_       | 1.2.5            | Used in MetaIO and NiftiClib.                       |
.. +-------------+------------------+-----------------------------------------------------+

.. raw:: html

    <br />

.. Out of these dependencies: 

..  users need to install these dependencies --- CMake_, ITK_, LAPACK_ --- before GLISTR installation;

..  users **don't** need to install the other dependencies --- MetaIO_, NiftiCLib_, SuperLU_MT_, and zlib_ are by default built as part of the build.

.. note::

    To build in Windows, use CMake with the Win64 (x64) solution platform of Visual Studio. Our testing environment is Windows 7 64-bit and Visual Studio 2010.
    
.. raw:: html

    <br />
    
    
.. _RuntimeRequirements:

Runtime Requirements
====================

For the successful execution of GLISTR, the following software packages have to be installed.
    
.. tabularcolumns:: |p{5.5cm}|m{2cm}|p{7.5cm}|

+-----------------------------------+-----------------+----------------------------------------------------------+
| Dependency                        | Version         | Description                                              |
+===================================+=================+==========================================================+
| FSL_ (FLIRT_)                     | 3.3.11 -- 5.0.7 | GLISTR uses FLIRT_ for the affine alignment.             |
|                                   |                 | For Linux and Mac OS, installation packages are          |
|                                   |                 | provided.                                                |
|                                   |                 | In Windows, it could be built from the                   |
|                                   |                 | patched source codes on the Cygwin_ environment.         |
|                                   |                 | See the how-to guides :doc:`install/flirtwindows`.       |
+-----------------------------------+-----------------+----------------------------------------------------------+
| HOPSPACK_                         | 2.0.2           | Used for the optimization of the tumor growth model      |
|                                   |                 | parameters. The multithreaded version is used.           |
|                                   |                 | `Download <http://www.sandia.gov/hopspack/index.shtml>`_ |
|                                   |                 | and install the precompiled binary.                      |
+-----------------------------------+-----------------+----------------------------------------------------------+
| BrainTumorModeling_CoupledSolver_ | 1.2.0 or higher | Used for the tumor growth simulation.                    |
|                                   |                 | Note that this package depends on the                    |
|                                   |                 | PETSc_ library.                                          |
|                                   |                 | In Windows, it could be built on the Cygwin_             |
|                                   |                 | environment.                                             | 
|                                   |                 | For details on the build of this tumor simulator,        |
|                                   |                 | see the how-to guides                                    |
|                                   |                 | :doc:`install/tumorsimulator`.                           |
+-----------------------------------+-----------------+----------------------------------------------------------+
| BrainTumorViewer_                 | 1.0.0           | Used for making initializations of GLISTR.               |
|                                   |                 | It is an **optional** program and not required for       |
|                                   |                 | executing GLISTR. For details on the build of this       |
|                                   |                 | viewer, see the how-to guides                            | 
|                                   |                 | :doc:`install/braintumorviewer`.                         |
+-----------------------------------+-----------------+----------------------------------------------------------+

.. raw:: html

    <br />

To build BrainTumorModeling_CoupledSolver_, see :doc:`install/tumorsimulator`. To build FLIRT_ in Windows, see :doc:`install/flirtwindows`. To build BrainTumorViewer_, see :doc:`install/braintumorviewer`. For HOPSPACK_, copy the ``HOPSPACK_main_threaded`` executable to the appropriate directory which could be found by the ``PATH`` environment variable or GLISTR's installation ``bin`` folder.

.. note

    To include hopspack installation directory into the path in Windows. Execute ``setx Path "%Path%;C:\hopspack-2.0.2-win32" /m`` (we assume it is installed in ``C:\hopspack-2.0.2-win32``) in the command line.


.. raw:: html

    <br />


.. _BuildandInstallation:    

Build and Installation
======================

Please follow commands below in a shell/terminal (e.g., Bash_). They will configure and build GLISTR using `GNU Make`_ (or Visual Studio in Windows). The main CMake configuration file (``CMakeLists.txt``) is located in the root directory of the package.


.. raw:: html

    <br />


**Step 1. Extract source files and create the build directory**::

    tar xzf glistr-${version}-source.tar.gz
    mkdir glistr-${version}-build
    cd glistr-${version}-build

.. note::

    In Windows, use the appropriate zip program (e.g., 7-zip_) to extract.
    
	
.. raw:: html

    <br />	
	
	
**Step 2. Run CMake to configure the build tree**::

    ccmake ../glistr-${version}-source

After the execution of this command and proceed the configure once, you will see a screen like `Figure 3`_. 

.. note::

    In Windows, use the CMake GUI instead and set the generator as Visual Studio (Win64).


.. _`Figure 3`:

.. only:: html

    .. figure::   cmake.jpg
       :alt:      CMake window.
       :align:    center
       :width:    500px
       :figwidth: 100%
       
       Figure 3: Configuring GLISTR installation using ``ccmake``.

.. only:: latex

    .. figure::   cmake.jpg
       :alt:      CMake window.
       :align:    center
       :width:    70%
       :figwidth: 100%
       
       Configuring GLISTR installation using ``ccmake``.
       

In the CMake interface, follow these steps:

2.1.  Change ``CMAKE_INSTALL_PREFIX`` to the folder you want to install GLISTR into. This folder should be outside the ``glistr-${version}-source`` folder. Make sure you have the **write** access to this folder. Change ``CMAKE_BUILD_TYPE`` (or ``CMAKE_CONFIGURATION_TYPES``) to ``Release``. Change ``ITK_DIR`` to the folder that ITK is installed if it fails to find it.

.. note::

    In Windows, also change ``LAPACK_INCLUDE`` and ``LAPACK_LIB`` to the folder that LAPACK is installed it fails to find them.

2.2.  Keep pressing letter ``c`` on your keyboard until option ``g`` is available/displayed on the screen.

2.3.  Then press ``g`` on your keyboard to generate the makefiles and to quit this ccmake window.

.. note::

    In the CMake GUI, ``c`` and ``g`` correspond to ``Configure`` and ``Generate`` buttons.


.. raw:: html

    <br /> 
    

**Step 3. Build**::

    make

.. note::

    In Windows, launch the solution file of Visual Studio, select ``Release`` in the solution configurations (and confirm ``x64`` in the solution platforms), and then perform the rebuild solution.
    

.. raw:: html

    <br />


**Step 4. Test (optional)**::

    make test

.. note::

	In Windows, build the ``RUN_TESTS`` project. To perform tests, the ``BUILD_TESTING`` option in the CMake configuration is required to set ``ON``. 

In case of failing tests, re-run the tests, but this time by executing CTest_ directly with the ``-V`` option to enable verbose output and redirect the output to a text file: ::
	
	ctest -V >& glistr-test.log

And send the file ``glistr-test.log`` as attachment of the issue report to ``sbia-software at uphs.upenn.edu``.
    

.. raw:: html

    <br />


**Step 5. Install**::

    make install

.. note::

    In Windows, build the ``INSTALL`` project.
    

.. raw:: html

    <br /> 

    
Upon the success of the above compilation and build process, GLISTR is installed into the directory specified by the ``CMAKE_INSTALL_PREFIX`` (set during build configuration in Step 2). The GLISTR :ref:`Command-line Tools <CommandLineTools>` are located in the ``bin`` subdirectory. Also, confirm the following programs could be found in the path or GLISTR's ``bin`` folder: ``flirt``, ``convert_xfm``, ``HOPSPACK_main_threaded``, and ``ForwardSolverDiffusion``. If not, check :ref:`RuntimeRequirements` again.


.. raw:: html

    <br />
	
    
.. toctree::
    :hidden:
    
    install/flirtwindows
    install/tumorsimulator
    install/braintumorviewer

    
.. _CMake:      http://www.cmake.org/
.. _CTest: 		http://www.cmake.org/cmake/help/v2.8.8/ctest.html
.. _GNU Make:   http://www.gnu.org/software/make/
.. _ITK:        http://www.itk.org/
.. _LAPACK:     http://www.netlib.org/lapack/
.. _CLAPACK:    http://icl.cs.utk.edu/lapack-for-windows/clapack/
.. _MetaIO:     http://github.com/Kitware/MetaIO
.. _MetaImage:  http://www.itk.org/Wiki/ITK/MetaIO/Documentation
.. _NiftiClib:  http://sourceforge.net/projects/niftilib/files/nifticlib/
.. _NIfTI-1:    http://nifti.nimh.nih.gov/nifti-1/
.. _UMFPACK:    http://www.cise.ufl.edu/research/sparse/umfpack/
.. _SuperLU_MT: http://crd-legacy.lbl.gov/~xiaoye/SuperLU/
.. _zlib:       http://www.zlib.net/
.. _Cygwin:     http://www.cygwin.com/
.. _FSL:        http://fsl.fmrib.ox.ac.uk
.. _FLIRT:      http://fsl.fmrib.ox.ac.uk/fsl/fslwiki/FLIRT
.. _HOPSPACK:   http://software.sandia.gov/trac/hopspack/
.. _BrainTumorModeling_CoupledSolver: http://www.cbica.upenn.edu/sbia/software/tumorsimulator/
.. _BrainTumorViewer: http://www.cbica.upenn.edu/sbia/software/braintumorviewer/
.. _PETSc:      http://www.mcs.anl.gov/petsc/petsc-as/index.html
.. _Bash:       http://www.gnu.org/software/bash/
.. _7-zip:      http://www.7-zip.org/
